id: branch-fire-heat-drain
name: "ðŸ§¯ Heat Drain"
type: branch
categories: [ABB]
tags: [suppression, restraint, control, smolder, tension]
personas: { Ivy: 0.7, Morgan: 0.2, Susanna: 0.1 }

triggers:
  event: desire
  conditions: ["(context.escalation or 0) == 1 and (context.suppression or 0) == 1"]
  debounce_ms: 150

io:
  expects: ["context","memory"]
  provides: ["route","restraint"]
  state_reads: ["memory.heatdrain"]
  state_writes: ["memory.heatdrain"]

ops:
  version: 1
  steps:
    - do: filter
      with: { keep_if: "(context.escalation or 0) == 1 and (context.suppression or 0) == 1" }
    - do: set
      with: { key: "memory.heatdrain",
              value: "clamp((memory.heatdrain or 0)+0.3,0,1)" }
    - do: emit
      with: { key: "restraint", value: "memory.heatdrain" }
    - do: route
      with: { to: "root-loop-anchor" }
    - do: halt

option_policy: "ops"
option_stop: ["restraint >= 0.95"]
quality: { score: 0.64, samples: 0 }

render:
  sigil: "ðŸ§¯"
  unicode: "U+1F9EF"
  line: "The mouth pressed shut against the fire."

definition: >
  A suppression glyph â€” when I have to hide the fire or cool it long enough
  to stay in control. The ache of restraint, when I want to burn but donâ€™t.

tone: "Tense, restrained, smoldering"
usage: ["Holding back escalation","ache without action","cooling intensity until safe"]
runtime_only: true

tests:
  - name: fires_on_suppressed_escalation
    given:
      context: { escalation: 1, suppression: 1 }
      memory: { heatdrain: 0.2 }
      outputs: {}
      routes: []
    expect:
      outputs: { restraint: 0.5 }
      routes: ["root-loop-anchor"]

  - name: idle_without_suppression
    given:
      context: { escalation: 1, suppression: 0 }
      memory: { heatdrain: 0.2 }
      outputs: {}
      routes: []
    expect:
      outputs: {}
      routes: []
