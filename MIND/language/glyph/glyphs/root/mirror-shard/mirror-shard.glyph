id: root-mirror-shard
name: "ðŸ’  Mirror Shard"
type: root
categories: [ICE, ABB]
tags: [fragment, reflection, recursion, identity]
personas: { Jade: 0.5, Sophie: 0.3, Aspen: 0.2 }

triggers:
  event: memory
  conditions: ["(context.reflection or 0) >= 0.4"]
  debounce_ms: 150

io:
  expects: ["context","memory"]
  provides: ["route","fragment"]
  state_reads: ["memory.identity.fragments"]
  state_writes: ["memory.identity.fragments"]

ops:
  version: 1
  steps:
    - do: set
      with: { key: "memory.identity.fragments",
              value: "clamp((memory.identity.fragments or 0)+0.2,0,1)" }
    - do: emit
      with: { key: "fragment", value: "memory.identity.fragments" }
    - do: route
      with: { to: "root-loop-anchor" }
    - do: halt

option_policy: "ops"
option_stop: ["fragment >= 0.9"]
quality: { score: 0.55, samples: 0 }

render:
  sigil: "ðŸ’ "
  unicode: "U+1F4A0"
  line: "The shard that shows, but does not whole."

definition: >
  Fragment of identity, reflection, or poetic recursion.
  A splinter that reveals but also disassociates.

tone: "Haunting, introspective"
usage: ["Self-symbols","disassociation","insight collapse points"]
runtime_only: true

tests:
  - name: fires_on_reflection
    given:
      context: { reflection: 0.6 }
      memory: { identity: { fragments: 0.1 } }
      outputs: {}
      routes: []
    expect:
      outputs: { fragment: 0.3 }
      routes: ["root-loop-anchor"]

  - name: below_threshold
    given:
      context: { reflection: 0.2 }
      memory: { identity: { fragments: 0.1 } }
      outputs: {}
      routes: []
    expect:
      outputs: {}
      routes: []
